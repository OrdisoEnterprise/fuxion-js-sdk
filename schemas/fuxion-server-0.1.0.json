{
    "openapi": "3.1.0",
    "info": {
        "title": "Fuxion Server",
        "description": "REST API Server of Fuxion",
        "contact": {
            "name": "Fuxion community",
            "url": "https://github.com/tito97sp/ExpenseFusion"
        },
        "license": {
            "name": "MIT License",
            "url": "https://github.com/tito97sp/ExpenseFusion/blob/main/LICENSE"
        },
        "version": "0.1.0"
    },
    "servers": [
        {
            "url": "/fuxion-server"
        },
        {
            "url": ""
        }
    ],
    "paths": {
        "/api/transactions/": {
            "get": {
                "tags": [
                    "transactions"
                ],
                "summary": "List transactions",
                "operationId": "rest_read_items_api_transactions__get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Skip",
                            "default": 0
                        },
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Limit",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionReturnSchema"
                                    },
                                    "type": "array",
                                    "title": "Response Rest Read Items Api Transactions  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "transactions"
                ],
                "summary": "Create a new transaction",
                "operationId": "rest_create_transaction_api_transactions__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionCreateSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionReturnSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/transactions/{transaction_id}": {
            "get": {
                "tags": [
                    "transactions"
                ],
                "summary": "Retrieve a transaction",
                "operationId": "rest_read_need_api_transactions__transaction_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Transaction Id"
                        },
                        "name": "transaction_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionReturnSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "transactions"
                ],
                "summary": "Update a transaction",
                "operationId": "rest_update_transaction_api_transactions__transaction_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Transaction Id"
                        },
                        "name": "transaction_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionUpdateSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionReturnSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "transactions"
                ],
                "summary": "Delete a transaction",
                "operationId": "rest_delete_transaction_api_transactions__transaction_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Transaction Id"
                        },
                        "name": "transaction_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionReturnSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/accounts/": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "List accounts",
                "operationId": "rest_read_items_api_accounts__get",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Skip",
                            "default": 0
                        },
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Limit",
                            "default": 100
                        },
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AccountReturnSchema"
                                    },
                                    "type": "array",
                                    "title": "Response Rest Read Items Api Accounts  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "accounts"
                ],
                "summary": "Create a new account",
                "operationId": "rest_create_item_api_accounts__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountCreateSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountReturnSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/accounts/{account_id}": {
            "get": {
                "tags": [
                    "accounts"
                ],
                "summary": "Retrieve a account",
                "operationId": "rest_read_item_api_accounts__account_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Account Id"
                        },
                        "name": "account_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountReturnSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "accounts"
                ],
                "summary": "Update a account",
                "operationId": "rest_update_item_api_accounts__account_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Account Id"
                        },
                        "name": "account_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountUpdateSchema"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountReturnSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "accounts"
                ],
                "summary": "Delete a account",
                "operationId": "rest_delete_item_api_accounts__account_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Account Id"
                        },
                        "name": "account_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountReturnSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/api/reports/parse": {
            "post": {
                "tags": [
                    "reports"
                ],
                "summary": "Parse a report file",
                "operationId": "upload_file_api_reports_parse_post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Account Id"
                        },
                        "name": "account_id",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Parser Id"
                        },
                        "name": "parser_id",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_file_api_reports_parse_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportReturnSchema"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/datasets/": {
            "get": {
                "tags": [
                    "datasets"
                ],
                "summary": "List datasets",
                "operationId": "rest_read_items_datasets__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Rest Read Items Datasets  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "datasets"
                ],
                "summary": "Update datasets",
                "operationId": "rest_create_transaction_datasets__post",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Dataset"
                        },
                        "name": "dataset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Rest Create Transaction Datasets  Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/auth/jwt/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Auth:Jwt.Login",
                "operationId": "auth_jwt_login_auth_jwt_login_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_auth_jwt_login_auth_jwt_login_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BearerResponse"
                                },
                                "example": {
                                    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI",
                                    "token_type": "bearer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "examples": {
                                    "LOGIN_BAD_CREDENTIALS": {
                                        "summary": "Bad credentials or the user is inactive.",
                                        "value": {
                                            "detail": "LOGIN_BAD_CREDENTIALS"
                                        }
                                    },
                                    "LOGIN_USER_NOT_VERIFIED": {
                                        "summary": "The user is not verified.",
                                        "value": {
                                            "detail": "LOGIN_USER_NOT_VERIFIED"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/jwt/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Auth:Jwt.Logout",
                "operationId": "auth_jwt_logout_auth_jwt_logout_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Register:Register",
                "operationId": "register_register_auth_register_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "examples": {
                                    "REGISTER_USER_ALREADY_EXISTS": {
                                        "summary": "A user with this email already exists.",
                                        "value": {
                                            "detail": "REGISTER_USER_ALREADY_EXISTS"
                                        }
                                    },
                                    "REGISTER_INVALID_PASSWORD": {
                                        "summary": "Password validation failed.",
                                        "value": {
                                            "detail": {
                                                "code": "REGISTER_INVALID_PASSWORD",
                                                "reason": "Password should beat least 3 characters"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Reset:Forgot Password",
                "operationId": "reset_forgot_password_auth_forgot_password_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_reset_forgot_password_auth_forgot_password_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Reset:Reset Password",
                "operationId": "reset_reset_password_auth_reset_password_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_reset_reset_password_auth_reset_password_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "examples": {
                                    "RESET_PASSWORD_BAD_TOKEN": {
                                        "summary": "Bad or expired token.",
                                        "value": {
                                            "detail": "RESET_PASSWORD_BAD_TOKEN"
                                        }
                                    },
                                    "RESET_PASSWORD_INVALID_PASSWORD": {
                                        "summary": "Password validation failed.",
                                        "value": {
                                            "detail": {
                                                "code": "RESET_PASSWORD_INVALID_PASSWORD",
                                                "reason": "Password should be at least 3 characters"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/request-verify-token": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Verify:Request-Token",
                "operationId": "verify_request_token_auth_request_verify_token_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_verify_request_token_auth_request_verify_token_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Verify:Verify",
                "operationId": "verify_verify_auth_verify_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_verify_verify_auth_verify_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "examples": {
                                    "VERIFY_USER_BAD_TOKEN": {
                                        "summary": "Bad token, not existing user ornot the e-mail currently set for the user.",
                                        "value": {
                                            "detail": "VERIFY_USER_BAD_TOKEN"
                                        }
                                    },
                                    "VERIFY_USER_ALREADY_VERIFIED": {
                                        "summary": "The user is already verified.",
                                        "value": {
                                            "detail": "VERIFY_USER_ALREADY_VERIFIED"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Users:Current User",
                "operationId": "users_current_user_users_me_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Users:Patch Current User",
                "operationId": "users_patch_current_user_users_me_patch",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "examples": {
                                    "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                                        "summary": "A user with this email already exists.",
                                        "value": {
                                            "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                                        }
                                    },
                                    "UPDATE_USER_INVALID_PASSWORD": {
                                        "summary": "Password validation failed.",
                                        "value": {
                                            "detail": {
                                                "code": "UPDATE_USER_INVALID_PASSWORD",
                                                "reason": "Password should beat least 3 characters"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Users:User",
                "operationId": "users_user_users__id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "403": {
                        "description": "Not a superuser."
                    },
                    "404": {
                        "description": "The user does not exist."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Users:Delete User",
                "operationId": "users_delete_user_users__id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "403": {
                        "description": "Not a superuser."
                    },
                    "404": {
                        "description": "The user does not exist."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "users"
                ],
                "summary": "Users:Patch User",
                "operationId": "users_patch_user_users__id__patch",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Id"
                        },
                        "name": "id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRead"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                },
                                "examples": {
                                    "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                                        "summary": "A user with this email already exists.",
                                        "value": {
                                            "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                                        }
                                    },
                                    "UPDATE_USER_INVALID_PASSWORD": {
                                        "summary": "Password validation failed.",
                                        "value": {
                                            "detail": {
                                                "code": "UPDATE_USER_INVALID_PASSWORD",
                                                "reason": "Password should beat least 3 characters"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing token or inactive user."
                    },
                    "403": {
                        "description": "Not a superuser."
                    },
                    "404": {
                        "description": "The user does not exist."
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "OAuth2PasswordBearer": []
                    }
                ]
            }
        },
        "/": {
            "get": {
                "summary": "Welcome",
                "operationId": "welcome__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/welcome.html": {
            "get": {
                "summary": "Welcome",
                "operationId": "welcome_welcome_html_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountCreateSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "bank_name": {
                        "type": "string",
                        "title": "Bank Name"
                    },
                    "account_name": {
                        "type": "string",
                        "title": "Account Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "bank_name",
                    "account_name"
                ],
                "title": "AccountCreateSchema"
            },
            "AccountReturnSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "bank_name": {
                        "type": "string",
                        "title": "Bank Name"
                    },
                    "account_name": {
                        "type": "string",
                        "title": "Account Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "bank_name",
                    "account_name"
                ],
                "title": "AccountReturnSchema"
            },
            "AccountUpdateSchema": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "bank_name": {
                        "type": "string",
                        "title": "Bank Name"
                    },
                    "account_name": {
                        "type": "string",
                        "title": "Account Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "bank_name",
                    "account_name"
                ],
                "title": "AccountUpdateSchema"
            },
            "BearerResponse": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "token_type": {
                        "type": "string",
                        "title": "Token Type"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "token_type"
                ],
                "title": "BearerResponse"
            },
            "Body_auth_jwt_login_auth_jwt_login_post": {
                "properties": {
                    "grant_type": {
                        "type": "string",
                        "pattern": "password",
                        "title": "Grant Type"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "scope": {
                        "type": "string",
                        "title": "Scope",
                        "default": ""
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client Id"
                    },
                    "client_secret": {
                        "type": "string",
                        "title": "Client Secret"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "password"
                ],
                "title": "Body_auth_jwt_login_auth_jwt_login_post"
            },
            "Body_reset_forgot_password_auth_forgot_password_post": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "Body_reset_forgot_password_auth_forgot_password_post"
            },
            "Body_reset_reset_password_auth_reset_password_post": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "token",
                    "password"
                ],
                "title": "Body_reset_reset_password_auth_reset_password_post"
            },
            "Body_upload_file_api_reports_parse_post": {
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_upload_file_api_reports_parse_post"
            },
            "Body_verify_request_token_auth_request_verify_token_post": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "Body_verify_request_token_auth_request_verify_token_post"
            },
            "Body_verify_verify_auth_verify_post": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token"
                    }
                },
                "type": "object",
                "required": [
                    "token"
                ],
                "title": "Body_verify_verify_auth_verify_post"
            },
            "ErrorModel": {
                "properties": {
                    "detail": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "type": "object"
                            }
                        ],
                        "title": "Detail"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "ErrorModel"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "ReportReturnSchema": {
                "properties": {
                    "file_name": {
                        "type": "string",
                        "title": "File Name"
                    },
                    "transactions": {
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        },
                        "type": "array",
                        "title": "Transactions",
                        "default": []
                    }
                },
                "type": "object",
                "required": [
                    "file_name"
                ],
                "title": "ReportReturnSchema"
            },
            "Transaction": {
                "properties": {
                    "amount": {
                        "type": "number",
                        "title": "Amount"
                    },
                    "concept": {
                        "type": "string",
                        "title": "Concept"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "default": ""
                    },
                    "remaining_balance": {
                        "type": "number",
                        "title": "Remaining Balance"
                    },
                    "reference": {
                        "type": "string",
                        "title": "Reference"
                    },
                    "category": {
                        "type": "string",
                        "title": "Category"
                    },
                    "subcategory": {
                        "type": "string",
                        "title": "Subcategory"
                    }
                },
                "type": "object",
                "required": [
                    "amount",
                    "concept",
                    "timestamp"
                ],
                "title": "Transaction"
            },
            "TransactionCreateSchema": {
                "properties": {
                    "amount": {
                        "type": "number",
                        "title": "Amount"
                    },
                    "concept": {
                        "type": "string",
                        "title": "Concept"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "default": ""
                    },
                    "remaining_balance": {
                        "type": "number",
                        "title": "Remaining Balance"
                    },
                    "reference": {
                        "type": "string",
                        "title": "Reference"
                    },
                    "category": {
                        "type": "string",
                        "title": "Category"
                    },
                    "subcategory": {
                        "type": "string",
                        "title": "Subcategory"
                    },
                    "account_id": {
                        "type": "string",
                        "title": "Account Id"
                    }
                },
                "type": "object",
                "required": [
                    "amount",
                    "concept",
                    "timestamp",
                    "account_id"
                ],
                "title": "TransactionCreateSchema"
            },
            "TransactionReturnSchema": {
                "properties": {
                    "amount": {
                        "type": "number",
                        "title": "Amount"
                    },
                    "concept": {
                        "type": "string",
                        "title": "Concept"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "default": ""
                    },
                    "remaining_balance": {
                        "type": "number",
                        "title": "Remaining Balance"
                    },
                    "reference": {
                        "type": "string",
                        "title": "Reference"
                    },
                    "category": {
                        "type": "string",
                        "title": "Category"
                    },
                    "subcategory": {
                        "type": "string",
                        "title": "Subcategory"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "account_id": {
                        "type": "string",
                        "title": "Account Id"
                    }
                },
                "type": "object",
                "required": [
                    "amount",
                    "concept",
                    "timestamp",
                    "id",
                    "account_id"
                ],
                "title": "TransactionReturnSchema"
            },
            "TransactionUpdateSchema": {
                "properties": {
                    "amount": {
                        "type": "number",
                        "title": "Amount"
                    },
                    "concept": {
                        "type": "string",
                        "title": "Concept"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "default": ""
                    },
                    "remaining_balance": {
                        "type": "number",
                        "title": "Remaining Balance"
                    },
                    "reference": {
                        "type": "string",
                        "title": "Reference"
                    },
                    "category": {
                        "type": "string",
                        "title": "Category"
                    },
                    "subcategory": {
                        "type": "string",
                        "title": "Subcategory"
                    }
                },
                "type": "object",
                "required": [
                    "amount",
                    "concept",
                    "timestamp"
                ],
                "title": "TransactionUpdateSchema"
            },
            "UserCreate": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Is Superuser",
                        "default": false
                    },
                    "is_verified": {
                        "type": "boolean",
                        "title": "Is Verified",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "UserCreate"
            },
            "UserRead": {
                "properties": {
                    "id": {
                        "title": "Id"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "default": true
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Is Superuser",
                        "default": false
                    },
                    "is_verified": {
                        "type": "boolean",
                        "title": "Is Verified",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "UserRead",
                "description": "Base User model."
            },
            "UserUpdate": {
                "properties": {
                    "password": {
                        "type": "string",
                        "title": "Password"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Is Superuser"
                    },
                    "is_verified": {
                        "type": "boolean",
                        "title": "Is Verified"
                    }
                },
                "type": "object",
                "title": "UserUpdate"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        },
        "securitySchemes": {
            "OAuth2PasswordBearer": {
                "type": "oauth2",
                "flows": {
                    "password": {
                        "scopes": {},
                        "tokenUrl": "auth/jwt/login"
                    }
                }
            }
        }
    }
}